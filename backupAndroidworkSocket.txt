package com.example.ntd.tpapplication;

import android.app.AlertDialog;
import android.net.wifi.WifiManager;
import android.support.v4.app.FragmentActivity;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.format.Formatter;
import android.text.method.ScrollingMovementMethod;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.content.ComponentName;
import android.content.Intent;
import android.content.Context;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningTaskInfo;
import android.widget.RelativeLayout;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.widget.TextView;
import android.widget.Toast;

import java.io.BufferedWriter;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.List;

public class DoorAccess extends FragmentActivity {
    final DB myDb = new DB(this);
    Button btnMode1, btnMode2, btnMode3, btnMode4, btnMode5, btnMode6, btnMode7;
    ImageView door1, door2, door3, door4, person1, person2, person3;
    RelativeLayout carLayout;
    TextView logDisplay;
    private Socket socket = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        getWindow().getDecorView().setSystemUiVisibility(
                View.SYSTEM_UI_FLAG_LAYOUT_STABLE
                        | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
                        | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
                        | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                        | View.SYSTEM_UI_FLAG_FULLSCREEN
                        | View.SYSTEM_UI_FLAG_IMMERSIVE);
        //  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
        //         WindowManager.LayoutParams.FLAG_FULLSCREEN);
        setContentView(R.layout.activity_door_access);
        InitButtonDeclare();
        InitImageDeclare();
        InitLayoutDeclare();
        InitTextView();

    }
public boolean running  = false;
    private void RunThread(String message)
    {
        if(!running) {
            running  = true;
            Thread clientThread = new Thread(new ClientThread(message));
            clientThread.start();
        }
    }
    public class ClientThread implements Runnable {
        String message;
        ClientThread(String message)
        {
            this.message = message;
        }
        @Override
        public void run() {
            try {
                String HOST = "172.20.10.12";
                InetAddress serverAddr = InetAddress.getByName(HOST);
                int PORT = 6000;
                socket = new Socket(serverAddr, PORT);
                PrintWriter out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(socket.getOutputStream())), true);
                out.println(message);
                socket.close();
                running=false;
            } catch (UnknownHostException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (Exception e) {

            }
        }
    }


    private void InitLayoutDeclare() {
        carLayout = (RelativeLayout) findViewById(R.id.carLayout);
    }

    private void InitImageDeclare() {
        door1 = (ImageView) findViewById(R.id.door1);
        door2 = (ImageView) findViewById(R.id.door2);
        door3 = (ImageView) findViewById(R.id.door3);
        door4 = (ImageView) findViewById(R.id.door4);
        person1 = (ImageView) findViewById(R.id.person1);
        person2 = (ImageView) findViewById(R.id.person2);
        person3 = (ImageView) findViewById(R.id.person3);
    }

    private void InitTextView() {
        logDisplay = (TextView) findViewById(R.id.logDisplay);
        logDisplay.setMovementMethod(new ScrollingMovementMethod());

        logDisplay.setVisibility(View.INVISIBLE);
    }

    private boolean checkCondition(int buttonNo) {
        if (buttonNo == 1) {
            Person p = new Person();
            return !(p.isP1In & p.isP2In & p.isP3In); // Person 1 2 3 in car
        }
        return true;
    }

    private void InitButtonDeclare() {
        btnMode1 = (Button) findViewById(R.id.btn_mode1);
        btnMode2 = (Button) findViewById(R.id.btn_mode2);
        btnMode3 = (Button) findViewById(R.id.btn_mode3);
        btnMode4 = (Button) findViewById(R.id.btn_mode4);
        btnMode5 = (Button) findViewById(R.id.btn_mode5);
        btnMode6 = (Button) findViewById(R.id.btn_mode6);
        btnMode7 = (Button) findViewById(R.id.btn_mode7);
        btnMode1.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (checkCondition(1))
                    modeClick(1);
            }
        });
        btnMode2.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(2);
            }
        });
        btnMode3.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(3);
            }
        });
        btnMode4.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(4);
            }
        });
        btnMode5.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(5);
            }
        });
        btnMode6.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(6);
            }
        });
        btnMode7.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                modeClick(7);
            }
        });
    }

    private void LogRefresh() {
        List<LogItems> itemList = myDb.SelectData();
        if (itemList == null) {
            ToastMessageShort("Not found data");
        } else {
            String logShow = "";
            Format formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            for (LogItems item : itemList) {
                logShow = logShow + formatter.format(item.date) + " " + item.message + "\r\n";
            }
            logDisplay.setText(logShow);
            int scrollAmount = logDisplay.getLayout().getLineTop(logDisplay.getLineCount()) - logDisplay.getHeight();
            // if there is no need to scroll, scrollAmount will be <=0
            if (scrollAmount > 0)
                logDisplay.scrollTo(0, scrollAmount);
            else
                logDisplay.scrollTo(0, 0);
        }
    }

    private void AddToDatabase(String text) {
        long flg = myDb.InsertData(text);
        if (flg > 0) {
            ToastMessageShort(text + " Success");
        } else  {
            ToastMessageShort( text + " Fail");
        }
        LogRefresh();
    }

    private void DeleteAllLog() {
        myDb.DeleteAllData();
        LogRefresh();
    }

    boolean isShowLog;

    public void modeClick(int buttonNo) {
        if (buttonNo == 1) {
            RunThread("1 Pressed");
            ToastMessageShort("1 Press");
            carLayout.setVisibility(View.VISIBLE);
            person1.setBackgroundResource(R.drawable.circleg);
            person2.setBackgroundResource(R.drawable.circleg);
            person3.setBackgroundResource(R.drawable.circleg);
            door1.setBackgroundResource(R.color.green);
            door2.setBackgroundResource(R.color.green);
            door3.setBackgroundResource(R.color.green);
            door4.setBackgroundResource(R.color.green);
            AddToDatabase("Secure Press");
        }
        if (buttonNo == 2) {
            RunThread("2 Pressed");
            ToastMessageShort("2 Press");
            carLayout.setVisibility(View.VISIBLE);
            person1.setBackgroundResource(R.drawable.circle);
            person2.setBackgroundResource(R.drawable.circle);
            person3.setBackgroundResource(R.drawable.circle);
            door1.setBackgroundResource(R.color.red);
            door2.setBackgroundResource(R.color.red);
            door3.setBackgroundResource(R.color.red);
            door4.setBackgroundResource(R.color.red);
            AddToDatabase("Depo Press");

        }
        if (buttonNo == 3) {
            RunThread("3 Pressed");
            ToastMessageShort("3 Press");
            DeleteAllLog();
            carLayout.setVisibility(View.INVISIBLE);
        }
        if (buttonNo == 4) {
            try {
                RunThread("4 Pressed");
                ToastMessageShort("4 Press");
            } catch (Exception e) {
                Toast.makeText(DoorAccess.this, e.getMessage(), Toast.LENGTH_SHORT).show();
            }
        }
        if (buttonNo == 5) {
            try {
                RunThread("5 Pressed");
                ToastMessageShort("5 Press");
            } catch (Exception e) {

            }
        }
        if (buttonNo == 6) {
            try {
                RunThread("6 Pressed");
                ToastMessageShort("6 Press");
            } catch (Exception e) {

            }
        }
        if (buttonNo == 7) {
            RunThread("7 Pressed");
            ToastMessageShort("7 Press");
            LogRefresh();
            if (isShowLog)
                logDisplay.setVisibility(View.VISIBLE);
            else
                logDisplay.setVisibility(View.INVISIBLE);
            isShowLog = !isShowLog;  //Toast.makeText(DoorAccess.this, logShow, Toast.LENGTH_LONG).show();
        }
    }

    private void ToastMessageShort(String message) {

        Toast.makeText(DoorAccess.this, message, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onBackPressed() {
        new AlertDialog.Builder(this)
                .setTitle("Delete entry").setMessage("TEST").show();
    }

    @Override
    public void onPause() {
        if (isApplicationSentToBackground(this)) {
            // Do what you want to do on detecting Home Key being Pressed
            new AlertDialog.Builder(this)
                    .setTitle("entry").setMessage("TEST").show();
        } else {


        }

        super.onPause();
    }

    public boolean isApplicationSentToBackground(final Context context) {
        ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        List<RunningTaskInfo> tasks = am.getRunningTasks(1);
        if (!tasks.isEmpty()) {
            ComponentName topActivity = tasks.get(0).topActivity;
            if (!topActivity.getPackageName().equals(context.getPackageName())) {
                return true;
            }
        }
        return false;
    }

/*
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.menu_door_access, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }
    */
}
